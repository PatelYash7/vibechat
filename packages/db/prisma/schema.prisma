// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(cuid())
  Name             String
  Password         String
  MobileNumber     String    @unique
  createdAt        DateTime  @default(now())
  messagesSent     Message[] @relation("MessagesSent")
  messagesReceived Message[] @relation("MessagesReceived")
  chatAsSender     Chat[]    @relation("SenderChats")
  chatAsReciever   Chat[]    @relation("RecieverChats")
}

model Chat {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  SenderId   String
  RecieverId String
  Sender     User      @relation("SenderChats", fields: [SenderId], references: [id])
  Reciever   User      @relation("RecieverChats", fields: [RecieverId], references: [id])
  messages   Message[]

  @@unique([SenderId, RecieverId])
}

model Message {
  id         String   @id @default(cuid())
  content    String
  chatId     String
  senderId   String
  receiverId String
  createdAt  DateTime @default(now())
  chat     Chat @relation(fields: [chatId], references: [id])
  sender   User @relation("MessagesSent", fields: [senderId], references: [id])
  receiver User @relation("MessagesReceived", fields: [receiverId], references: [id])
}
